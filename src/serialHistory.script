///////////////////////////////////////////////////////////////////////////////
/// @fn serialHistory 1
/// @brief Preserves command recieved history
///////////////////////////////////////////////////////////////////////////////
click historyFilters,1
parse.last.txt=parse.buffer.txt
if(parse.last.txt!="")
{
  strlen parse.last.txt,BuffHistNewLineLen
  strlen connect.history.txt,BuffHistLen
  BuffHistNewLen=BuffHistLen+BuffHistNewLineLen
  if(BuffHistNewLen>=connect.history.txt_maxl) //Check if reached buffer lenght
  {
    //Cut lenght of new command out of buffer
    substr connect.history.txt,vars.slarge.txt,BuffHistNewLineLen,connect.history.txt_maxl
    connect.history.txt=vars.slarge.txt
    //Find length until next \r
    spstr connect.history.txt,vars.slarge.txt,"\r",0
    strlen vars.slarge.txt,BuffHistTrimLen
    BuffHistTrimLen+=1 // Trim one more char
    //Cut that out of the rest of the buffer
    strlen connect.history.txt,BuffHistLen //Get new buffer len
    substr connect.history.txt,vars.slarge.txt,BuffHistTrimLen+1,BuffHistLen-BuffHistTrimLen //+1 is to advance cursor
    connect.history.txt=vars.slarge.txt
  }
  //connect.history.txt+="R: "
  connect.history.txt+=parse.last.txt
  connect.history.txt+="\r"
}

///////////////////////////////////////////////////////////////////////////////
/// @fn serialHistory 0
/// @brief Preserves command sent history
///////////////////////////////////////////////////////////////////////////////
// Scroll up command history
commands.last.txt=commands.command.txt
strlen commands.last.txt,BuffHistNewLineLen
strlen connect.history.txt,BuffHistLen
BuffHistNewLen=BuffHistLen+BuffHistNewLineLen
if(BuffHistNewLen>=connect.history.txt_maxl) //Check if reached buffer lenght
{
  //Cut lenght of new command out of buffer
  substr connect.history.txt,vars.slarge.txt,BuffHistNewLineLen,connect.history.txt_maxl
  connect.history.txt=vars.slarge.txt
  //Find length until next \r
  spstr connect.history.txt,vars.slarge.txt,"\r",0
  strlen vars.slarge.txt,BuffHistTrimLen
  BuffHistTrimLen+=1 // Trim one more char
  //Cut that out of the rest of the buffer
  strlen connect.history.txt,BuffHistLen //Get new buffer len
  substr connect.history.txt,vars.slarge.txt,BuffHistTrimLen+1,BuffHistLen-BuffHistTrimLen //+1 is to advance cursor
  connect.history.txt=vars.slarge.txt
}
connect.history.txt+="S: "
connect.history.txt+=commands.last.txt
connect.history.txt+="\r"
