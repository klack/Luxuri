///////////////////////////////////////////////////////////////////////////////
/// @fn luxRead 1
/// @brief Read the buffer and notify when end of line is reached
///////////////////////////////////////////////////////////////////////////////
if(usize>0)
{
  while(SerialPos<usize)
  {
    ucopy parse.startChar.txt,SerialPos,1,0 //Check next character
    if(u[SerialPos]==10||u[SerialPos]==13) //If linefeed or carriage return
    {
      //EOL reached
      strlen parse.buffer.txt,BufferLen //Record buffer length
      click luxNotify,1 //Notify listeners
      parse.buffer.txt="" //Clear buffer
    }
    if(u[SerialPos]==13) //Cariage return
    {
      SerialPos++       //Lookahead to next char
      if(SerialPos<usize) //If under buffersize
      {
        if(u[SerialPos]!=10) //But no linefeed
        {
          SerialPos-- //Rollback
        }
      }else
      {
        SerialPos-- //Rollback if over buffersize
      }
    }else
    {
      if(u[SerialPos]!=10) //Add character to line if not CR or LF
      {
        parse.buffer.txt+=parse.startChar.txt
      }
    }
    SerialPos++ //Next character
  }
  if(SerialPos==usize) //End of buffer reached
  {
    code_c
    BufferLen=0
    SerialPos=0
  }
}
