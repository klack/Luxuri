//drawMesh
boxWidth.val=grid.w
boxWidth.val/=gridPoints.val
boxHeight.val=grid.h
boxHeight.val/=gridPoints.val
ii=0
for(row.val=0;row.val<gridPoints.val;row.val++)
{
  for(col.val=0;col.val<gridPoints.val;col.val++)
  {
    click getColor,1
    click drawBox,1
    ii++
  }
}

//drawBox
startX.val=col.val
startX.val*=boxWidth.val
startX.val+=grid.x
startY.val=row.val
startY.val*=boxHeight.val
startY.val+=grid.y
fill startX.val,startY.val,boxWidth.val,boxHeight.val,cc

//getColor
spstr arrPoints.txt,vars.s.txt,";",ii // Get the offset value for this point
covx vars.s.txt,oo,0,0
if(oo>=0&&oo<=49)
{
  spstr posColors.txt,vars.s.txt,";",oo
}
if(oo<=0&&oo>=-49)
{
  oo*=-1
  spstr negColors.txt,vars.s.txt,";",oo
}
if(oo>49)
{
  spstr posColors.txt,vars.s.txt,";",49
}
if(oo<-49)
{
  spstr negColors.txt,vars.s.txt,";",49
}
covx vars.s.txt,cc,0,0


//getMesh
covx currentSlot.val,vars.s.txt,0,0
commands.command.txt="G29 W L"
commands.command.txt+=vars.s.txt

//showLastLine
historyFilters.swTemp.val=1
historyFilters.swBusy.val=1
strlen parse.last.txt,ii
if(ii>1)
{
  tLastLine.txt=parse.last.txt
}

///////////////////////////////////////////////////////////////////////////////
/// @fn luxView,1
/// @brief Updates states for controls
///////////////////////////////////////////////////////////////////////////////
if(currentSlot.val==-1)
{
  currentSlot.aph=0
}else
{
  currentSlot.aph=127
}
if(getSlot.val==0)
{
  bBack.aph=0
}else
{
  bBack.aph=127
}
if(getSlot.val==maxSlots.val)
{
  bForward.aph=0
}else
{
  bForward.aph=127
}
if(updatingMesh.val==1)
{
  progress.aph=127
  bUpdate.txt="Updating"
  bUpdate.picc=bUpdate.picc2+1
  bUpdate.pco=29615
  if(tStatus.y>SCREEN_HEIGHT)
  {
    tStatus.y=tStatus.y-SCREEN_HEIGHT
    blkTouch.y=blkTouch.y-SCREEN_HEIGHT
    vis blkTouch,1
  }
}
else
{
  progress.aph=0
  bUpdate.txt="Update"
  bUpdate.picc=bUpdate.picc2
  bUpdate.pco=36
  if(tStatus.y<SCREEN_HEIGHT)
  {
    tStatus.y=tStatus.y+SCREEN_HEIGHT
    blkTouch.y=blkTouch.y+SCREEN_HEIGHT
  }
}
ii=currentPoint.val
ii*=100
ii/=totalPoints.val
progress.val=ii
if(currentPoint.val>0)
{
  tStatus.txt="Probing Point "
  covx currentPoint.val,vars.s.txt,0,0
  tStatus.txt+=vars.s.txt
  tStatus.txt+="/"
  covx totalPoints.val,vars.s.txt,0,0
  tStatus.txt+=vars.s.txt
}
tFadeHeight.txt=mesh.fadeHeight.txt
strlen arrPoints.txt,ii
if(ii>0)
{
  if(drawFinished.val==0)
  {
    doevents
    click drawMesh,1
  }
}




//tFadeHeight click
ReturnObj=touch.val
numpad.tCaption.txt="Fade Height"
vars.returnVal.txt=""
page numpad

//tFadeHeight callback
if(vars.returnVal.txt!="null")
{
  commands.queue.txt+="M420 Z"
  commands.queue.txt+=vars.returnVal.txt
  click luxSend,0
}

//bUpdate click
currentPoint.val=0
updatingMesh.val=1
tStatus.txt="Updating Mesh..."
click luxView,1
doevents
commands.queue.txt+="G28\rG29 P1\r"
click luxSend,0
parse.callback.txt="bUpdate:P1"
click luxSetCallback,1


///////////////////////////////////////////////////////////////////////////////
/// @fn luxController,1
/// @brief Program loop
///////////////////////////////////////////////////////////////////////////////
if(currentSlot.val==-1)
{
  commands.queue.txt="M420 T1 L0\r"
  click luxSend,0
}
if(parse.callbackReturn.txt=="bUpdate:finished")
{
  parse.callbackReturn.txt=""
  updatingMesh.val=0
}
if(parse.callbackReturn.txt=="bUpdate:P1")
{
  parse.callbackReturn.txt=""
  commands.command.txt="G29 P3\rG29 P3\rG29 T1"
  click luxSend,1
  commands.command.txt="G29 S"
  covx currentSlot.val,vars.s.txt,0,0
  commands.command.txt+=vars.s.txt
  click luxSend,1
  parse.callback.txt="bUpdate:finished"
  click luxSetCallback,1
}

