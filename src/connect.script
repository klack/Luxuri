Page connect
    Attributes
        ID                 : 0
        Scope              : local
        Send Component ID  : disabled
        Opacity            : 127
        Width              : 480
        Effect             : load
        Locked             : no
        Swide up page ID   : disabled
        Swide down page ID : disabled
        Swide left page ID : disabled
        Swide right page ID: disabled
        Fill               : picture
        Back. Picture ID   : 1
    
Variable (string) history
    Attributes
        ID            : 6
        Scope         : global
        Text          : 
        Max. Text Size: 4096
    
Variable (int32) connected
    Attributes
        ID   : 15
        Scope: local
        Value: 0
    
Text tStatus
    Attributes
        ID                      : 14
        Scope                   : local
        Dragging                : 0
        Send Component ID       : disabled
        Opacity                 : 127
        x coordinate            : 0
        y coordinate            : 237
        Width                   : 480
        Height                  : 18
        Effect                  : load
        Fill                    : crop image
        Associated Keyboard     : none
        Font ID                 : 14
        Cropped Back. Picture ID: 0
        Horizontal Alignment    : center
        Vertical Alignment      : center
        Input Type              : character
        Text                    : 
        Max. Text Size          : 128
        Word wrap               : disabled
        Horizontal Spacing      : 0
        Vertical Spacing        : 0
    
    Events
        Touch Press Event
            ok=1
            page connect
        
Hotspot luxInit
    Attributes
        ID               : 1
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 124
        y coordinate     : 65475
        Width            : 106
        Height           : 18
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxInitialize 1
            /// @brief Sets up the lux framework
            ///////////////////////////////////////////////////////////////////////////////
            click luxView,1
            //click luxController,1
        
        Touch Release Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxInitialize 0
            /// @brief Should run on any close button
            ///////////////////////////////////////////////////////////////////////////////
        
Hotspot luxView
    Attributes
        ID               : 2
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 248
        y coordinate     : 65476
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxView,1
            /// @brief Updates states for controls
            ///////////////////////////////////////////////////////////////////////////////
            if(connected.val==1)
            {
                tStatus.txt="Connected"
            }
        
Hotspot luxRunOnce
    Attributes
        ID               : 3
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 124
        y coordinate     : 65493
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxRunOnce
            /// @breif Does not run when returning from dialog boxes
            ///////////////////////////////////////////////////////////////////////////////
            click setDefaults,1
        
Hotspot luxSend
    Attributes
        ID               : 4
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 0
        y coordinate     : 65493
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxSend 1
            /// @brief Send a single command
            /// @param[in] command.command.txt
            ///////////////////////////////////////////////////////////////////////////////
            prints commands.command.txt,0
            printh 0A
            ok=0
            //click serialHistory,0
            commands.command.txt=""
        
        Touch Release Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxSend 0
            /// @brief Send command queue, waiting for ok between each command
            /// @brief Waits a max of 10 times for each ok
            ///////////////////////////////////////////////////////////////////////////////
            strlen commands.queue.txt,QueueLen //get the length of the command queue
            if(ok==1&&busy==0) //Send Queue
            {
                QueueBlocks=0
                while(QueueLen>0&&QueueBlocks<=10)
                {
                    click luxRead,1
                    if(ok==1&&busy==0)
                    {
                        spstr commands.queue.txt,vars.s.txt,"\r",0
                        if(vars.s.txt!="")
                        {
                            strlen vars.s.txt,CommandLen //get the lenght of the command
                            CharLen=QueueLen-CommandLen //calc the amount of chars to copy
                            //remove the command from the queue by getting a substring of the commandqueue
                            substr commands.queue.txt,commands.queue.txt,CommandLen+2,CharLen //+2 to count \r
                            commands.command.txt=vars.s.txt
                            click luxSend,1
                        }else
                        {
                            commands.queue.txt=""
                            QueueLen=0
                        }
                    }else
                    {
                        QueueBlocks+=1
                    }
                    strlen commands.queue.txt,QueueLen //Refresh the command queue lenght
                }
            }
        
Hotspot luxRead
    Attributes
        ID               : 5
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 0
        y coordinate     : 65510
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxRead 1
            /// @brief Read the buffer and notify when end of line is reached
            ///////////////////////////////////////////////////////////////////////////////
            if(usize>0)
            {
                while(SerialPos<usize)
                {
                    ucopy parse.startChar.txt,SerialPos,1,0 //Check next character
                    if(u[SerialPos]==10||u[SerialPos]==13) //If linefeed or carriage return
                    {
                        //EOL reached
                        strlen parse.buffer.txt,BufferLen //Record buffer length
                        click luxNotify,1 //Notify listeners
                        parse.buffer.txt="" //Clear buffer
                    }
                    if(u[SerialPos]==13) //Cariage return
                    {
                        SerialPos++       //Lookahead to next char
                        if(SerialPos<usize) //If under buffersize
                        {
                            if(u[SerialPos]!=10) //But no linefeed
                            {
                                SerialPos-- //Rollback
                            }
                        }else
                        {
                            SerialPos-- //Rollback if over buffersize
                        }
                    }else
                    {
                        if(u[SerialPos]!=10) //Add character to line if not CR or LF
                        {
                            parse.buffer.txt+=parse.startChar.txt
                        }
                    }
                    SerialPos++ //Next character
                }
                if(SerialPos==usize) //End of buffer reached
                {
                    code_c
                    BufferLen=0
                    SerialPos=0
                }
            }
        
Hotspot luxNotify
    Attributes
        ID               : 8
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 17
        Width            : 106
        Height           : 18
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxNotify
            /// @breif Notify listeners
            ///////////////////////////////////////////////////////////////////////////////
            click parseCommon,1
            click parseSettings,1
            click parseTemp,1
            click parseFirmware,1
        
Hotspot parseSettings
    Attributes
        ID               : 9
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 65
        Width            : 106
        Height           : 18
        Effect           : load
    
    Events
        Touch Press Event
            parse.search.txt="// screw1: " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.screw1.txt,parse.search.txt,1 //Split by qualifier
            }
            parse.search.txt="// screw2: " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.screw2.txt,parse.search.txt,1 //Split by qualifier
            }
            parse.search.txt="// screw3: " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.screw3.txt,parse.search.txt,1 //Split by qualifier
            }
            parse.search.txt="// screw4: " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.screw4.txt,parse.search.txt,1 //Split by qualifier
            }
            parse.search.txt="// bed_center: " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.bedCenter.txt,parse.search.txt,1 //Split by qualifier
            }
        
Hotspot parser
    Attributes
        ID               : 10
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 0
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn         parse_1
            ///
            /// @brief      Parse buffer for exact line match
            /// @param[in]  parse.search.txt      Text to search for
            /// @param[out] parse.matched.val     1 if match, 0 if no match
            ///////////////////////////////////////////////////////////////////////////////
            parse.matched.val=0
            parse.eval.txt=parse.buffer.txt
            if(parse.search.txt==parse.eval.txt)
            {
                parse.matched.val=1
            }else
            {
                parse.matched.val=0
            }
        
        Touch Release Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn         parse_0
            ///
            /// @brief      Parse buffer starting at index 0
            /// @param[in]  parse.search.txt      Text to search for
            /// @param[out] parse.matched.val     1 if match, 0 if no match
            ///////////////////////////////////////////////////////////////////////////////
            parse.matched.val=0
            parse.eval.txt=parse.buffer.txt
            strlen parse.search.txt,j
            substr parse.eval.txt,parse.result.txt,0,j
            if(parse.result.txt==parse.search.txt)
            {
                parse.matched.val=1
            }else
            {
                parse.matched.val=0
            }
        
Hotspot parseCommon
    Attributes
        ID               : 11
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 35
        Width            : 106
        Height           : 15
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn     parseCommon 1
            /// @brief  Essential items to be parsed
            ///////////////////////////////////////////////////////////////////////////////
            parse.lineMatch.txt="ok" //Ok
            if(parse.buffer.txt==parse.lineMatch.txt)
            {
                ok=1
                busy=0
            }
            parse.lineMatch.txt="ok B:" //Handle M105
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                ok=1
                busy=0
            }
            parse.lineMatch.txt="// Print Paused" //Qualify Line
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                page printing
            }
            parse.lineMatch.txt="SD printing byte " //Qualify Line
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                page printing
            }
            parse.lineMatch.txt="File selected" //Qualify Line
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                page printing
            }
            parse.lineMatch.txt="File opened:" //Qualify Line
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                page printing
            }
            parse.lineMatch.txt="!! " //Error
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                spstr parse.buffer.txt,printer.error.txt,parse.lineMatch.txt,1
                parse.buffer.txt=""
                page error
            }
            parse.search.txt="// Activating extruder " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,vars.s.txt,parse.search.txt,1
                if(vars.s.txt=="extruder")
                {
                    Tool=0
                }else if(vars.s.txt=="extruder1")
                {
                    Tool=1
                }
            }
        
        Touch Release Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn         parseCommon 0
            ///
            /// @brief      Parse buffer using a starting and ending position
            /// @param[in]  parse.search.txt      Text to search for
            /// @param[in]  parse.startPos.val    Starting char postion to search from
            /// @param[out] parse.matched.val     1 if match, 0 if no match
            ///////////////////////////////////////////////////////////////////////////////
            parse.matched.val=0
            parse.eval.txt=parse.buffer.txt
            strlen parse.search.txt,j
            substr parse.eval.txt,parse.result.txt,parse.startPos.val,j
            if(parse.result.txt==parse.search.txt)
            {
                parse.matched.val=1
            }else
            {
                parse.matched.val=0
            }
        
Hotspot parseTemp
    Attributes
        ID               : 12
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 50
        Width            : 106
        Height           : 15
        Effect           : load
    
    Events
        Touch Press Event
            // ok T:204.97 /205.00 B:75.02 /75.00 T0:204.97 /205.00 T1:205.04 /205.00 @:59 B@:12 @0:59 @1:70
            // ok B:46.0 /0.0 T0:28.9 /0.0 T1:28.9 /0.0\x0A
            //Qualify Line
            parse.lineMatch.txt="ok B:" //Handle M105
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                parse.matched.val=1
            }
            if(parse.matched.val==1)
            {
                //Bed Temp
                spstr parse.buffer.txt,parse.match.txt,"B:",1 //Split by B:
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.bedTemp.val,0,0 //Give bed temp at index 0
                //Bed SetTemp
                spstr parse.buffer.txt,parse.match.txt," /",1
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.setBedTemp.val,0,0
                //T0 Temp
                spstr parse.buffer.txt,parse.match.txt,"T0:",1
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.T0Temp.val,0,0
                //T0 SetTemp
                spstr parse.buffer.txt,parse.match.txt," /",2
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.T0SetTemp.val,0,0
                //T1 Temp
                spstr parse.buffer.txt,parse.match.txt,"T1:",1
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.T1Temp.val,0,0
                //T1 SetTemp
                spstr parse.buffer.txt,parse.match.txt," /",3
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.T1SetTemp.val,0,0
            }
            printer.heating.val=0
            if(printer.bedTemp.val<printer.setBedTemp.val)
            {
                printer.heating.val=1
            }
            if(printer.T0Temp.val<printer.T0SetTemp.val)
            {
                printer.heating.val=1
            }
            if(printer.T1Temp.val<printer.T1SetTemp.val)
            {
                printer.heating.val=1
            }
            printer.hot.val=0
            if(printer.setBedTemp.val!=0&&printer.bedTemp.val>=printer.setBedTemp.val)
            {
                printer.hot.val=1
            }
            if(printer.T0SetTemp.val!=0&&printer.T0Temp.val>=printer.T0SetTemp.val)
            {
                printer.hot.val=1
            }
            if(printer.T1SetTemp.val!=0&&printer.T1Temp.val>=printer.T1SetTemp.val)
            {
                printer.hot.val=1
            }
            if(printer.setBedTemp.val!=0&&printer.bedTemp.val<printer.setBedTemp.val)
            {
                printer.hot.val=0
            }
            if(printer.T0SetTemp.val!=0&&printer.T0Temp.val<printer.T0SetTemp.val)
            {
                printer.hot.val=0
            }
            if(printer.T1SetTemp.val!=0&&printer.T1Temp.val<printer.T1SetTemp.val)
            {
                printer.hot.val=0
            }
        
Hotspot setDefaults
    Attributes
        ID               : 16
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 286
        y coordinate     : 65507
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn setDefaults
            /// @breif Reset printing statuses
            ///////////////////////////////////////////////////////////////////////////////
            printer.paused.val=0
            printer.sdPrinting.val=0
            printer.currentByte.val=0
            printer.totalBytes.val=0
            printer.fileName.txt=""
            printer.printFinished.val=0
            printer.m117.txt=""
            printing.tMsg.txt=""
            printing.pausePending.val=0
            printing.resumePending.val=0
            printing.stopPending.val=0
            printer.firmwareName.txt=""
        
Hotspot getSettings
    Attributes
        ID               : 17
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 372
        y coordinate     : 65509
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn getSettings
            /// @breif Report printer settings
            ///////////////////////////////////////////////////////////////////////////////
            commands.queue.txt="M115\rM114\r"
            commands.queue.txt+="M220\rM221\r"
            commands.queue.txt+="SET_VELOCITY_LIMIT\rGET_RETRACTION\r"
            commands.queue.txt+="M503\rM105\r"
            click luxSend,0
            tmRedirect.en=1
        
Hotspot parseFirmware
    Attributes
        ID               : 19
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65385
        y coordinate     : 116
        Width            : 106
        Height           : 19
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @brief Parse Firmware type
            ///////////////////////////////////////////////////////////////////////////////
            parse.search.txt="ok FIRMWARE_NAME:"  //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.firmwareName.txt,parse.search.txt,1
                ok=1
            }
        
Timer luxRun
    Attributes
        ID         : 7
        Scope      : local
        Period (ms): 100
        Enabled    : no
    
    Events
        Timer Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxRun
            /// @breif Main Program Loop
            ///////////////////////////////////////////////////////////////////////////////
            click luxRead,1
            click luxView,1
            click luxSend,0
        
Timer luxConnect
    Attributes
        ID         : 13
        Scope      : local
        Period (ms): 1000
        Enabled    : yes
    
    Events
        Timer Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxConnect
            /// @brief Connect trying different baud rates automatically
            ///////////////////////////////////////////////////////////////////////////////
            if(usize<=0) //If the buffer is empty, or Baud has not be initialized
            {
                commands.command.txt="M105"  //Try and trigger a response
                click luxSend,1
            }else
            {
                connected.val=1
                luxConnect.en=0
                luxRun.en=1
                click getSettings,1
            }
        
Timer tmRedirect
    Attributes
        ID         : 18
        Scope      : local
        Period (ms): 100
        Enabled    : no
    
    Events
        Timer Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn tmRedirect
            /// @brief Redirect after all settings are recieved
            ///////////////////////////////////////////////////////////////////////////////
            if(printer.T0Temp.val!=0)
            {
                page MAIN
            }
        
