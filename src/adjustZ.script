Page adjustZ
    Attributes
        ID                 : 0
        Scope              : local
        Send Component ID  : disabled
        Opacity            : 127
        Width              : 480
        Effect             : load
        Locked             : no
        Swide up page ID   : disabled
        Swide down page ID : disabled
        Swide left page ID : disabled
        Swide right page ID: disabled
        Fill               : picture
        Back. Picture ID   : 126
    
Text tLabel
    Attributes
        ID                  : 2
        Scope               : local
        Dragging            : 0
        Send Component ID   : disabled
        Opacity             : 127
        x coordinate        : 225
        y coordinate        : 64
        Width               : 154
        Height              : 36
        Effect              : load
        Fill                : solid color
        Style               : flat
        Associated Keyboard : none
        Font ID             : 9
        Back. Color         : 2210
        Font Color          : 65535
        Horizontal Alignment: center
        Vertical Alignment  : center
        Input Type          : character
        Text                : Z Endstop
        Max. Text Size      : 10
        Word wrap           : disabled
        Horizontal Spacing  : 0
        Vertical Spacing    : 0
    
Text tZ
    Attributes
        ID                      : 3
        Scope                   : local
        Dragging                : 0
        Send Component ID       : disabled
        Opacity                 : 127
        x coordinate            : 161
        y coordinate            : 108
        Width                   : 61
        Height                  : 60
        Effect                  : load
        Fill                    : crop image
        Associated Keyboard     : none
        Font ID                 : 9
        Cropped Back. Picture ID: 128
        Horizontal Alignment    : right
        Vertical Alignment      : bottom
        Input Type              : character
        Text                    : 1.7
        Max. Text Size          : 10
        Word wrap               : disabled
        Horizontal Spacing      : 0
        Vertical Spacing        : 0
    
Text tChange
    Attributes
        ID                      : 4
        Scope                   : local
        Dragging                : 0
        Send Component ID       : disabled
        Opacity                 : 127
        x coordinate            : 262
        y coordinate            : 108
        Width                   : 66
        Height                  : 60
        Effect                  : load
        Fill                    : crop image
        Associated Keyboard     : none
        Font ID                 : 9
        Cropped Back. Picture ID: 128
        Horizontal Alignment    : right
        Vertical Alignment      : bottom
        Input Type              : character
        Text                    : 0.2
        Max. Text Size          : 10
        Word wrap               : disabled
        Horizontal Spacing      : 0
        Vertical Spacing        : 0
    
Text tOffset
    Attributes
        ID                      : 5
        Scope                   : local
        Dragging                : 0
        Send Component ID       : disabled
        Opacity                 : 127
        x coordinate            : 366
        y coordinate            : 108
        Width                   : 76
        Height                  : 60
        Effect                  : load
        Fill                    : crop image
        Associated Keyboard     : none
        Font ID                 : 9
        Cropped Back. Picture ID: 128
        Horizontal Alignment    : right
        Vertical Alignment      : bottom
        Input Type              : character
        Text                    : 0.5
        Max. Text Size          : 10
        Word wrap               : disabled
        Horizontal Spacing      : 0
        Vertical Spacing        : 0
    
Text tNew
    Attributes
        ID                      : 8
        Scope                   : local
        Dragging                : 0
        Send Component ID       : disabled
        Opacity                 : 127
        x coordinate            : 359
        y coordinate            : 172
        Width                   : 83
        Height                  : 82
        Effect                  : load
        Fill                    : transparent
        Associated Keyboard     : none
        Font ID                 : 9
        Back. Color             : 0
        Cropped Back. Picture ID: 128
        Back. Picture ID        : 128
        Font Color              : 57116
        Horizontal Alignment    : right
        Vertical Alignment      : center
        Input Type              : character
        Text                    : 0.5
        Max. Text Size          : 10
        Word wrap               : disabled
        Horizontal Spacing      : 0
        Vertical Spacing        : 0
    
Text tTitle
    Attributes
        ID                      : 10
        Scope                   : local
        Dragging                : 0
        Send Component ID       : disabled
        Opacity                 : 127
        x coordinate            : 40
        y coordinate            : 8
        Width                   : 126
        Height                  : 26
        Effect                  : load
        Fill                    : crop image
        Associated Keyboard     : none
        Font ID                 : 2
        Cropped Back. Picture ID: 0
        Horizontal Alignment    : left
        Vertical Alignment      : top
        Input Type              : character
        Text                    : Adjust Z
        Max. Text Size          : 16
        Word wrap               : disabled
        Horizontal Spacing      : 0
        Vertical Spacing        : 0
    
Crop Picture qLine
    Attributes
        ID                      : 1
        Scope                   : local
        Dragging                : 0
        Send Component ID       : disabled
        Opacity                 : 127
        x coordinate            : 159
        y coordinate            : 77
        Width                   : 293
        Height                  : 12
        Effect                  : load
        Cropped Back. Picture ID: 128
    
Crop Picture q0
    Attributes
        ID                      : 7
        Scope                   : local
        Dragging                : 0
        Send Component ID       : disabled
        Opacity                 : 127
        x coordinate            : 347
        y coordinate            : 175
        Width                   : 108
        Height                  : 73
        Effect                  : load
        Cropped Back. Picture ID: 128
    
Button b0
    Attributes
        ID                                  : 6
        Scope                               : local
        Dragging                            : 0
        Send Component ID                   : disabled
        Opacity                             : 127
        x coordinate                        : 31
        y coordinate                        : 59
        Width                               : 96
        Height                              : 96
        Effect                              : load
        Fill                                : crop image
        Font ID                             : 0
        Cropped Back. Picture ID (Unpressed): 128
        Back. Picture ID (Pressed)          : 65535
        Cropped Back. Picture ID (Pressed)  : 129
        Horizontal Alignment                : center
        Vertical Alignment                  : center
        State                               : unpressed
        Text                                : 
        Max. Text Size                      : 10
        Word wrap                           : disabled
        Horizontal Spacing                  : 0
        Vertical Spacing                    : 0
    
Button b1
    Attributes
        ID                                  : 9
        Scope                               : local
        Dragging                            : 0
        Send Component ID                   : disabled
        Opacity                             : 127
        x coordinate                        : 32
        y coordinate                        : 153
        Width                               : 96
        Height                              : 96
        Effect                              : load
        Fill                                : crop image
        Font ID                             : 0
        Cropped Back. Picture ID (Unpressed): 128
        Back. Picture ID (Pressed)          : 65535
        Cropped Back. Picture ID (Pressed)  : 129
        Horizontal Alignment                : center
        Vertical Alignment                  : center
        State                               : unpressed
        Text                                : 
        Max. Text Size                      : 10
        Word wrap                           : disabled
        Horizontal Spacing                  : 0
        Vertical Spacing                    : 0
    
Button bClose
    Attributes
        ID                                  : 11
        Scope                               : local
        Dragging                            : 0
        Send Component ID                   : disabled
        Opacity                             : 127
        x coordinate                        : 0
        y coordinate                        : 0
        Width                               : 38
        Height                              : 38
        Effect                              : load
        Fill                                : crop image
        Font ID                             : 14
        Cropped Back. Picture ID (Unpressed): 80
        Back. Picture ID (Pressed)          : 40
        Cropped Back. Picture ID (Pressed)  : 81
        Horizontal Alignment                : center
        Vertical Alignment                  : center
        State                               : unpressed
        Text                                : 
        Max. Text Size                      : 0
        Word wrap                           : disabled
        Horizontal Spacing                  : 0
        Vertical Spacing                    : 0
    
    Events
        Touch Press Event
            click luxInit,0
            page ReturnPage
        
Hotspot luxRead
    Attributes
        ID               : 12
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 0
        y coordinate     : 65510
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxRead 1
            /// @brief Read the buffer and notify when end of line is reached
            ///////////////////////////////////////////////////////////////////////////////
            if(usize>0)
            {
                while(SerialPos<usize)
                {
                    ucopy parse.startChar.txt,SerialPos,1,0 //Check next character
                    if(u[SerialPos]==10||u[SerialPos]==13) //If linefeed or carriage return
                    {
                        //EOL reached
                        strlen parse.buffer.txt,BufferLen //Record buffer length
                        click luxNotify,1 //Notify listeners
                        parse.buffer.txt="" //Clear buffer
                    }
                    if(u[SerialPos]==13) //Cariage return
                    {
                        SerialPos++       //Lookahead to next char
                        if(SerialPos<usize) //If under buffersize
                        {
                            if(u[SerialPos]!=10) //But no linefeed
                            {
                                SerialPos-- //Rollback
                            }
                        }else
                        {
                            SerialPos-- //Rollback if over buffersize
                        }
                    }else
                    {
                        if(u[SerialPos]!=10) //Add character to line if not CR or LF
                        {
                            parse.buffer.txt+=parse.startChar.txt
                        }
                    }
                    SerialPos++ //Next character
                }
                if(SerialPos==usize) //End of buffer reached
                {
                    code_c
                    BufferLen=0
                    SerialPos=0
                }
            }
        
Hotspot luxSend
    Attributes
        ID               : 13
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 0
        y coordinate     : 65493
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxSend 1
            /// @brief Send a single command
            /// @param[in] command.command.txt
            ///////////////////////////////////////////////////////////////////////////////
            prints commands.command.txt,0
            printh 0A
            ok=0
            click serialHistory,0
            commands.command.txt=""
        
        Touch Release Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxSend 0
            /// @brief Send command queue, waiting for ok between each command
            /// @brief Waits a max of 10 times for each ok
            ///////////////////////////////////////////////////////////////////////////////
            strlen commands.queue.txt,QueueLen //get the length of the command queue
            if(ok==1&&busy==0) //Send Queue
            {
                QueueBlocks=0
                while(QueueLen>0&&QueueBlocks<=10)
                {
                    click luxRead,1
                    if(ok==1&&busy==0)
                    {
                        spstr commands.queue.txt,vars.s.txt,"\r",0
                        if(vars.s.txt!="")
                        {
                            strlen vars.s.txt,CommandLen //get the lenght of the command
                            CharLen=QueueLen-CommandLen //calc the amount of chars to copy
                            //remove the command from the queue by getting a substring of the commandqueue
                            substr commands.queue.txt,commands.queue.txt,CommandLen+2,CharLen //+2 to count \r
                            commands.command.txt=vars.s.txt
                            click luxSend,1
                        }else
                        {
                            commands.queue.txt=""
                            QueueLen=0
                        }
                    }else
                    {
                        QueueBlocks+=1
                    }
                    strlen commands.queue.txt,QueueLen //Refresh the command queue lenght
                }
            }
        
Hotspot luxDoCallback
    Attributes
        ID               : 14
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 124
        y coordinate     : 65510
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxCallback 1
            /// @brief Control callbacks
            ///////////////////////////////////////////////////////////////////////////////
            if(ReturnObj==0) //Direct to custom controller callback
            {
                //  click luxController,0
            }else
            {
                click b[ReturnObj],0
            }
        
        Touch Release Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxCallback 0
            /// @brief Clear callback vars
            ///////////////////////////////////////////////////////////////////////////////
            ReturnVal=-1
            vars.returnVal.txt="null"
            HandleCallback=0
            parse.callback.txt="null"
            parse.callbackReturn.txt="null"
        
Hotspot luxRunOnce
    Attributes
        ID               : 15
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 124
        y coordinate     : 65493
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxRunOnce
            /// @breif Does not run when returning from dialog boxes
            ///////////////////////////////////////////////////////////////////////////////
        
Hotspot luxView
    Attributes
        ID               : 16
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 248
        y coordinate     : 65476
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxView,1
            /// @brief Updates states for controls
            ///////////////////////////////////////////////////////////////////////////////
        
Hotspot luxInit
    Attributes
        ID               : 17
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 124
        y coordinate     : 65475
        Width            : 106
        Height           : 18
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxInit 1
            /// @brief Sets up the lux framework
            ///////////////////////////////////////////////////////////////////////////////
            click luxView,1
            //click luxAnimate,1
            //click luxController,1
            if(HandleCallback==0)
            {
                click luxDoCallback,0 //Clears callback vars
                click luxRunOnce,1
            }else
            {
                click luxDoCallback,1
                click luxDoCallback,0
            }
            // ReturnPage=dp
            DiagReturnPage=dp
        
        Touch Release Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxInitialize 0
            /// @brief Should run on any close button
            ///////////////////////////////////////////////////////////////////////////////
        
Hotspot luxNotify
    Attributes
        ID               : 18
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 17
        Width            : 106
        Height           : 18
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn luxNotify
            /// @breif Notify listeners
            ///////////////////////////////////////////////////////////////////////////////
            click parseCommon,1
            click parseSettings,1
            click parseTemp,1
            click serialHistory,1
        
Hotspot serialHistory
    Attributes
        ID               : 19
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 83
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn serialHistory 1
            /// @brief Preserves command recieved history
            ///////////////////////////////////////////////////////////////////////////////
            click historyFilters,1
            parse.last.txt=parse.buffer.txt
            if(parse.last.txt!="")
            {
                strlen parse.last.txt,BuffHistNewLineLen
                strlen connect.history.txt,BuffHistLen
                BuffHistNewLen=BuffHistLen+BuffHistNewLineLen
                if(BuffHistNewLen>=connect.history.txt_maxl) //Check if reached buffer lenght
                {
                    //Cut lenght of new command out of buffer
                    substr connect.history.txt,vars.slarge.txt,BuffHistNewLineLen,connect.history.txt_maxl
                    connect.history.txt=vars.slarge.txt
                    //Find length until next \r
                    spstr connect.history.txt,vars.slarge.txt,"\r",0
                    strlen vars.slarge.txt,BuffHistTrimLen
                    BuffHistTrimLen+=1 // Trim one more char
                    //Cut that out of the rest of the buffer
                    strlen connect.history.txt,BuffHistLen //Get new buffer len
                    substr connect.history.txt,vars.slarge.txt,BuffHistTrimLen+1,BuffHistLen-BuffHistTrimLen //+1 is to advance cursor
                    connect.history.txt=vars.slarge.txt
                }
                //connect.history.txt+="R: "
                connect.history.txt+=parse.last.txt
                connect.history.txt+="\r"
            }
        
        Touch Release Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn serialHistory 0
            /// @brief Preserves command sent history
            ///////////////////////////////////////////////////////////////////////////////
            // Scroll up command history
            commands.last.txt=commands.command.txt
            strlen commands.last.txt,BuffHistNewLineLen
            strlen connect.history.txt,BuffHistLen
            BuffHistNewLen=BuffHistLen+BuffHistNewLineLen
            if(BuffHistNewLen>=connect.history.txt_maxl) //Check if reached buffer lenght
            {
                //Cut lenght of new command out of buffer
                substr connect.history.txt,vars.slarge.txt,BuffHistNewLineLen,connect.history.txt_maxl
                connect.history.txt=vars.slarge.txt
                //Find length until next \r
                spstr connect.history.txt,vars.slarge.txt,"\r",0
                strlen vars.slarge.txt,BuffHistTrimLen
                BuffHistTrimLen+=1 // Trim one more char
                //Cut that out of the rest of the buffer
                strlen connect.history.txt,BuffHistLen //Get new buffer len
                substr connect.history.txt,vars.slarge.txt,BuffHistTrimLen+1,BuffHistLen-BuffHistTrimLen //+1 is to advance cursor
                connect.history.txt=vars.slarge.txt
            }
            connect.history.txt+="S: "
            connect.history.txt+=commands.last.txt
            connect.history.txt+="\r"
        
Hotspot historyFilters
    Attributes
        ID               : 20
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 100
        Width            : 106
        Height           : 16
        Effect           : load
    
    Events
        Touch Press Event
            //Qualify Line
            parse.matched.val=0
            if(historyFilters.swTemp.val==1)
            {
                parse.lineMatch.txt=" T:"
                strlen parse.lineMatch.txt,j
                substr parse.buffer.txt,parse.eval.txt,0,j
                if(parse.eval.txt==parse.lineMatch.txt)
                {
                    parse.matched.val=1
                }
                parse.lineMatch.txt="ok T:" //Handle M105 Temp Response
                strlen parse.lineMatch.txt,j
                substr parse.buffer.txt,parse.eval.txt,0,j
                if(parse.eval.txt==parse.lineMatch.txt)
                {
                    parse.matched.val=1
                }
            }
            if(historyFilters.swBusy.val==1)
            {
                parse.lineMatch.txt="echo:busy: processing" //Busy
                strlen parse.lineMatch.txt,j
                substr parse.buffer.txt,parse.eval.txt,0,j
                if(parse.eval.txt==parse.lineMatch.txt)
                {
                    parse.matched.val=1
                }
            }
            if(historyFilters.swSDCard.val==1)
            {
                parse.lineMatch.txt="Not SD printing" //SD Status
                strlen parse.lineMatch.txt,j
                substr parse.buffer.txt,parse.eval.txt,0,j
                if(parse.eval.txt==parse.lineMatch.txt)
                {
                    parse.matched.val=1
                }
                parse.lineMatch.txt="SD printing byte " //SD Progress
                strlen parse.lineMatch.txt,j
                substr parse.buffer.txt,parse.eval.txt,0,j
                if(parse.eval.txt==parse.lineMatch.txt)
                {
                    parse.matched.val=1
                }
            }
            if(historyFilters.swEcho.val==1)
            {
                parse.lineMatch.txt="echo:echo:"
                strlen parse.lineMatch.txt,j
                substr parse.buffer.txt,parse.eval.txt,0,j
                if(parse.eval.txt==parse.lineMatch.txt)
                {
                    spstr parse.buffer.txt,parse.buffer.txt,"echo:",2
                }
            }
            if(historyFilters.swEcho.val==1)
            {
                parse.lineMatch.txt="echo:"
                strlen parse.lineMatch.txt,j
                substr parse.buffer.txt,parse.eval.txt,0,j
                if(parse.eval.txt==parse.lineMatch.txt)
                {
                    spstr parse.buffer.txt,parse.buffer.txt,"echo:",1
                }
            }
            parse.lineMatch.txt="X:"
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                parse.matched.val=1
            }
            if(parse.matched.val==1)
            {
                parse.buffer.txt=""
                parse.matched.val=0
            }
        
Hotspot parseSettings
    Attributes
        ID               : 21
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 65
        Width            : 106
        Height           : 18
        Effect           : load
    
    Events
        Touch Press Event
            parse.search.txt="// screw1: " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.screw1.txt,parse.search.txt,1 //Split by qualifier
            }
            parse.search.txt="// screw2: " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.screw2.txt,parse.search.txt,1 //Split by qualifier
            }
            parse.search.txt="// screw3: " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.screw3.txt,parse.search.txt,1 //Split by qualifier
            }
            parse.search.txt="// screw4: " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.screw4.txt,parse.search.txt,1 //Split by qualifier
            }
            parse.search.txt="// bed_center: " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,printer.bedCenter.txt,parse.search.txt,1 //Split by qualifier
            }
        
Hotspot parser
    Attributes
        ID               : 22
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 0
        Width            : 106
        Height           : 17
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn         parse_1
            ///
            /// @brief      Parse buffer for exact line match
            /// @param[in]  parse.search.txt      Text to search for
            /// @param[out] parse.matched.val     1 if match, 0 if no match
            ///////////////////////////////////////////////////////////////////////////////
            parse.matched.val=0
            parse.eval.txt=parse.buffer.txt
            if(parse.search.txt==parse.eval.txt)
            {
                parse.matched.val=1
            }else
            {
                parse.matched.val=0
            }
        
        Touch Release Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn         parse_0
            ///
            /// @brief      Parse buffer starting at index 0
            /// @param[in]  parse.search.txt      Text to search for
            /// @param[out] parse.matched.val     1 if match, 0 if no match
            ///////////////////////////////////////////////////////////////////////////////
            parse.matched.val=0
            parse.eval.txt=parse.buffer.txt
            strlen parse.search.txt,j
            substr parse.eval.txt,parse.result.txt,0,j
            if(parse.result.txt==parse.search.txt)
            {
                parse.matched.val=1
            }else
            {
                parse.matched.val=0
            }
        
Hotspot parseCommon
    Attributes
        ID               : 23
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 35
        Width            : 106
        Height           : 15
        Effect           : load
    
    Events
        Touch Press Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn     parseCommon 1
            /// @brief  Essential items to be parsed
            ///////////////////////////////////////////////////////////////////////////////
            parse.lineMatch.txt="ok" //Ok
            if(parse.buffer.txt==parse.lineMatch.txt)
            {
                ok=1
                busy=0
            }
            parse.lineMatch.txt="ok B:" //Handle M105
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                ok=1
                busy=0
            }
            parse.lineMatch.txt="// Print Paused" //Qualify Line
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                page printing
            }
            parse.lineMatch.txt="SD printing byte " //Qualify Line
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                page printing
            }
            parse.lineMatch.txt="File selected" //Qualify Line
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                page printing
            }
            parse.lineMatch.txt="File opened:" //Qualify Line
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                page printing
            }
            parse.lineMatch.txt="!! " //Error
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                spstr parse.buffer.txt,printer.error.txt,parse.lineMatch.txt,1
                parse.buffer.txt=""
                page error
            }
            parse.search.txt="// Activating extruder " //Qualify Line
            click parser,0
            if(parse.matched.val==1)
            {
                spstr parse.buffer.txt,vars.s.txt,parse.search.txt,1
                if(vars.s.txt=="extruder")
                {
                    Tool=0
                }else if(vars.s.txt=="extruder1")
                {
                    Tool=1
                }
            }
        
        Touch Release Event
            ///////////////////////////////////////////////////////////////////////////////
            /// @fn         parseCommon 0
            ///
            /// @brief      Parse buffer using a starting and ending position
            /// @param[in]  parse.search.txt      Text to search for
            /// @param[in]  parse.startPos.val    Starting char postion to search from
            /// @param[out] parse.matched.val     1 if match, 0 if no match
            ///////////////////////////////////////////////////////////////////////////////
            parse.matched.val=0
            parse.eval.txt=parse.buffer.txt
            strlen parse.search.txt,j
            substr parse.eval.txt,parse.result.txt,parse.startPos.val,j
            if(parse.result.txt==parse.search.txt)
            {
                parse.matched.val=1
            }else
            {
                parse.matched.val=0
            }
        
Hotspot parseTemp
    Attributes
        ID               : 24
        Scope            : local
        Dragging         : 0
        Send Component ID: disabled
        Opacity          : 127
        x coordinate     : 65418
        y coordinate     : 50
        Width            : 106
        Height           : 15
        Effect           : load
    
    Events
        Touch Press Event
            // ok T:204.97 /205.00 B:75.02 /75.00 T0:204.97 /205.00 T1:205.04 /205.00 @:59 B@:12 @0:59 @1:70
            // ok B:46.0 /0.0 T0:28.9 /0.0 T1:28.9 /0.0\x0A
            //Qualify Line
            parse.lineMatch.txt="ok B:" //Handle M105
            strlen parse.lineMatch.txt,j
            substr parse.buffer.txt,parse.eval.txt,0,j
            if(parse.eval.txt==parse.lineMatch.txt)
            {
                parse.matched.val=1
            }
            if(parse.matched.val==1)
            {
                //Bed Temp
                spstr parse.buffer.txt,parse.match.txt,"B:",1 //Split by B:
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.bedTemp.val,0,0 //Give bed temp at index 0
                //Bed SetTemp
                spstr parse.buffer.txt,parse.match.txt," /",1
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.setBedTemp.val,0,0
                //T0 Temp
                spstr parse.buffer.txt,parse.match.txt,"T0:",1
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.T0Temp.val,0,0
                //T0 SetTemp
                spstr parse.buffer.txt,parse.match.txt," /",2
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.T0SetTemp.val,0,0
                //T1 Temp
                spstr parse.buffer.txt,parse.match.txt,"T1:",1
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.T1Temp.val,0,0
                //T1 SetTemp
                spstr parse.buffer.txt,parse.match.txt," /",3
                spstr parse.match.txt,vars.s.txt," ",0 //Split substring by space
                covx vars.s.txt,printer.T1SetTemp.val,0,0
            }
            printer.heating.val=0
            if(printer.bedTemp.val<printer.setBedTemp.val)
            {
                printer.heating.val=1
            }
            if(printer.T0Temp.val<printer.T0SetTemp.val)
            {
                printer.heating.val=1
            }
            if(printer.T1Temp.val<printer.T1SetTemp.val)
            {
                printer.heating.val=1
            }
            printer.hot.val=0
            if(printer.setBedTemp.val!=0&&printer.bedTemp.val>=printer.setBedTemp.val)
            {
                printer.hot.val=1
            }
            if(printer.T0SetTemp.val!=0&&printer.T0Temp.val>=printer.T0SetTemp.val)
            {
                printer.hot.val=1
            }
            if(printer.T1SetTemp.val!=0&&printer.T1Temp.val>=printer.T1SetTemp.val)
            {
                printer.hot.val=1
            }
            if(printer.setBedTemp.val!=0&&printer.bedTemp.val<printer.setBedTemp.val)
            {
                printer.hot.val=0
            }
            if(printer.T0SetTemp.val!=0&&printer.T0Temp.val<printer.T0SetTemp.val)
            {
                printer.hot.val=0
            }
            if(printer.T1SetTemp.val!=0&&printer.T1Temp.val<printer.T1SetTemp.val)
            {
                printer.hot.val=0
            }
        
